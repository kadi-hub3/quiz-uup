{"version":3,"sources":["API.ts","utils.ts","components/QuestionCard.styles.ts","components/QuestionCard.tsx","pages/Home.styles.ts","images/general-img.jpg","images/CS-img.jpg","images/history-img.jpg","images/geo-img.jpg","images/religion-img.jpg","images/politics-img.jpg","pages/Home.tsx","App.tsx","index.tsx"],"names":["Difficulty","Category","fetchQuestions","amount","category","difficulty","a","endpoint","fetch","json","data","results","map","question","answers","array","correct_answer","incorrect_answers","sort","Math","random","Wrapper","styled","div","Button","correct","userClicked","QuestionCard","userAnswer","questionNr","totalQuestions","callback","className","dangerouslySetInnerHTML","__html","answer","correctAnswer","disabled","value","onClick","GlobalStyle","createGlobalStyle","Title","h3","CardWrapper","TOTAL_QUESTIONS","Home","useState","loading","setLoading","questions","setQuestions","number","setNumber","setUserAnswer","score","setScore","gameOver","setGameOver","startCSQuiz","Computers","MEDIUM","newQueries","console","log","startGeneralQuiz","General","startPoliticsQuiz","Politics","startHistoryQuiz","History","startArtsQuiz","Arts","startGeoQuiz","Geography","src","GeneralImg","alt","to","CSImg","GeoImg","PoliticslImg","HistoryImg","ArtslImg","undefined","e","currentTarget","prev","answerObject","next","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5d48223.chunk.js","sourcesContent":["import { shuffleArray } from './utils'\n\nexport type Question = {\n    answers: [string],\n    category: string,\n    correct_answer: string,\n    difficulty: string,\n    incorrect_answers: [string],\n    question: string,\n    type: string\n}\n\nexport enum Difficulty {\n    EASY = 'easy',\n    MEDIUM = 'medium',\n    HARD = 'hard'\n}\n\nexport enum Category {\n    General = 9,\n    Computers = 18,\n    Geography = 22,\n    History = 23,\n    Politics = 24,\n    Arts = 25\n}\n\nexport const fetchQuestions = async (amount: number, category: Category, difficulty: Difficulty) => {\n    const endpoint = `https://opentdb.com/api.php?amount=${amount}&category=${category}&difficulty=${difficulty}&type=multiple`\n    const data = await (await fetch(endpoint)).json()\n    return data.results.map((question: Question) => {\n        return {\n            ...question,\n            answers: shuffleArray([question.correct_answer, ...question.incorrect_answers])\n        }\n    })\n\n\n\n}\n","export const shuffleArray = (array: any[]) => (\n    [...array].sort(() => Math.random() - 0.5)\n)","import styled from 'styled-components'\n\n\nexport const Wrapper = styled.div` \nwidth: 80vw;\nheight: 60vh;\nbackground: #333;\nborder-radius: 10px;\nborder: 1em solid #555;\npadding: 1rem;\nbox-shadow: 0px 5px 10px rgba(0, 0, 0, 0.25);\ntext-align: center;\ndisplay:flex;\nflex-direction:column;\nmargin: 1rem 0;`\n\ntype ButtonWrapperProps = {\n  correct: boolean;\n  userClicked: boolean;\n};\n\nexport const Button = styled.div<ButtonWrapperProps>`\n  background: transparent;\n  margin: 1rem 0;\n  :hover {\n    opacity: 0.8;\n  }\n  button {\n    cursor: pointer;\n    font-size: 1rem;\n    font-weight: 700;\n    width: 40vw;\n    height: 4rem;\n    margin: 5px 0;\n    background: ${({ correct, userClicked }) =>\n    correct\n      ? 'linear-gradient(90deg, #5aff15, #00b712)'\n      : !correct && userClicked\n        ? 'linear-gradient(90deg, #a71d31, #3f0d12)'\n        : 'linear-gradient(90deg, #fc575e, #f7b42c)'};\n    border: 3px solid #ffffff;\n    box-shadow: 1px 2px 0px rgba(0, 0, 0, 0.1);\n    border-radius: 10px;\n    color: #fff;\n    text-shadow: 0px 1px 0px rgba(0, 0, 0, 0.25);\n  }\n  `","import React from 'react'\nimport { Button, Wrapper } from './QuestionCard.styles'\nimport { AnswerObject } from '../pages/Home'\n\ntype Props = {\n    question: string,\n    answers: [string],\n    userAnswer: AnswerObject | undefined,\n    callback: (e: React.MouseEvent<HTMLButtonElement>) => void,\n    questionNr: number,\n    totalQuestions: number\n}\n\nconst QuestionCard: React.FC<Props> = ({ question, answers, userAnswer, questionNr, totalQuestions, callback }) => {\n    return (\n        <Wrapper>\n            <p className='question'>Question: {questionNr} / {totalQuestions}</p>\n            <p dangerouslySetInnerHTML={{ __html: question }} />\n            <div>\n                {answers && answers.map(answer => (\n                    <Button\n                        key={answer}\n                        correct={userAnswer?.correctAnswer === answer}\n                        userClicked={userAnswer?.answer === answer}\n                    >\n                        <button disabled={userAnswer ? true : false} value={answer} onClick={callback}>\n                            <p dangerouslySetInnerHTML={{ __html: answer }} />\n                        </button>\n                    </Button>\n                ))\n                }\n            </div>\n\n        </Wrapper>\n    )\n}\n\nexport default QuestionCard\n","import styled, { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\nhtml {\n    height: 100%;\n  }\n  body {\n    margin: 0;\n    padding: 0 2rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: #222;\n    color: #fff;\n    font-size: 1rem;\n  }\n  * {\n    font-family: 'Kiwi Maru', serif;\n    box-sizing: border-box;\n  }\n\n  .score{\n    position: absolute;\n    top: 5%;\n    right: 10%;\n    font-size: 1.5rem;\n    color: #9eb5ff;\n  }\n\n  .next{\n    position: absolute;\n    bottom: 10%;\n    right: 40%;\n    padding: .5rem 2rem;\n    border-radius: 1rem;\n  }\n\n  .log-out{\n    right: 5%;\n    background: #777;\n  }\n\n  .log-icon{\n    font-size: 1rem;\n\n  }\n\n`\nexport const Title = styled.h3`\n    font-size: 3em;\n    text-align: center;\n    color: #fff;\n    text-transform: capitalize;\n    display: flex;\n    flex-direction: column;\n\n    span{\n      font-size: 1.5rem;\n      padding-left: 2em;\n      color: #db7093;\n    }\n\n`\nexport const CardWrapper = styled.div`\n    position: relative;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    flex-wrap: wrap;\n    max-width: 80vw;\n\n    .card{\n        position: relative;\n        width: 320px;\n        height: 320px;\n        margin: 15px;\n        color: #333;\n        overflow: hidden;\n        border-radius: 1rem;\n\n    }\n\n    .imgBx, . contentBx {\n        position: absolute;\n        top: 0;\n        left: 0;\n        height: 100%;\n        width: 100%;\n    }\n\n    img{\n        position: absolute;\n        top: 0;\n        left: 0;\n        height: 100%;\n        width: 100%;\n        object-fit: cover;\n    }\n\n    .contentBx::before{\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: #fff;\n      transform: scalex(0);\n      transition: transform 0.2s ease-in-out;\n      transform-origin: right;\n    }\n\n      .card:hover .contentBx::before{\n        transform: scaleX(1);\n        transition: transform 0.2s ease-in-out;\n        transform-origin: left;\n      }\n\n      .card .contentBx{\n        display: flex;\n        justify-content: center;\n        align-items: center;\n      }\n\n      .card .contentBx .content{\n        position: relative;\n        padding: 3rem;\n        z-index: 1;\n        transition: .2s;\n        transform: translateX(-300px);\n      }\n\n      .card .contentBx .content h3{\n        font-weight: bolder;\n      }\n\n      .card:hover .contentBx .content{\n        transition: .2s;\n        transform: translateX(0);\n      }\n\n      .card .contentBx .content .start{\n        margin: .5rem 0;\n        padding: .5rem 2rem;\n        font-weight: 700;\n        font-size: 1rem;\n        color: #fff;\n        background: #32CD32;\n        border-radius: 1rem;\n        cursor: pointer;\n      }\n\n      .card .contentBx .content .start:hover{\n        background: orange;\n      }\n`;\n","export default __webpack_public_path__ + \"static/media/general-img.6f1d8480.jpg\";","export default __webpack_public_path__ + \"static/media/CS-img.a53de674.jpg\";","export default __webpack_public_path__ + \"static/media/history-img.2a5fc10a.jpg\";","export default __webpack_public_path__ + \"static/media/geo-img.603776a8.jpg\";","export default __webpack_public_path__ + \"static/media/religion-img.e1705431.jpg\";","export default __webpack_public_path__ + \"static/media/politics-img.246a790e.jpg\";","import React, { useState } from 'react'\nimport { fetchQuestions, Category, Difficulty, Question } from '../API'\nimport QuestionCard from '../components/QuestionCard';\nimport { Link } from 'react-router-dom'\nimport { GlobalStyle, CardWrapper, Title } from './Home.styles'\nimport GeneralImg from '../images/general-img.jpg'\nimport CSImg from '../images/CS-img.jpg'\nimport HistoryImg from '../images/history-img.jpg'\nimport GeoImg from '../images/geo-img.jpg'\nimport ArtslImg from '../images/religion-img.jpg'\nimport PoliticslImg from '../images/politics-img.jpg'\nimport { FiLogOut } from 'react-icons/fi'\n\nconst TOTAL_QUESTIONS = 10\n\nexport type AnswerObject = {\n    question: string,\n    answer: string,\n    correct: boolean,\n    correctAnswer: string\n\n}\n\nconst Home = () => {\n    const [loading, setLoading] = useState(false)\n    const [questions, setQuestions] = useState<Question[]>([])\n    const [number, setNumber] = useState(0)\n    const [userAnswer, setUserAnswer] = useState<AnswerObject[]>([])\n    const [score, setScore] = useState(0)\n    const [gameOver, setGameOver] = useState(true)\n\n    const startCSQuiz = async () => {\n        setLoading(true)\n        setGameOver(false)\n        const newQueries = await fetchQuestions(TOTAL_QUESTIONS, Category.Computers, Difficulty.MEDIUM)\n        setQuestions(newQueries)\n        console.log(newQueries);\n        setNumber(0)\n        setScore(0)\n        setUserAnswer([])\n        setLoading(false)\n\n    }\n    const startGeneralQuiz = async () => {\n        setLoading(true)\n        setGameOver(false)\n        const newQueries = await fetchQuestions(TOTAL_QUESTIONS, Category.General, Difficulty.MEDIUM)\n        setQuestions(newQueries)\n        console.log(newQueries);\n        setNumber(0)\n        setScore(0)\n        setUserAnswer([])\n        setLoading(false)\n\n    }\n    const startPoliticsQuiz = async () => {\n        setLoading(true)\n        setGameOver(false)\n        const newQueries = await fetchQuestions(TOTAL_QUESTIONS, Category.Politics, Difficulty.MEDIUM)\n        setQuestions(newQueries)\n        console.log(newQueries);\n        setNumber(0)\n        setScore(0)\n        setUserAnswer([])\n        setLoading(false)\n\n    }\n    const startHistoryQuiz = async () => {\n        setLoading(true)\n        setGameOver(false)\n        const newQueries = await fetchQuestions(TOTAL_QUESTIONS, Category.History, Difficulty.MEDIUM)\n        setQuestions(newQueries)\n        console.log(newQueries);\n        setNumber(0)\n        setScore(0)\n        setUserAnswer([])\n        setLoading(false)\n\n    }\n    const startArtsQuiz = async () => {\n        setLoading(true)\n        setGameOver(false)\n        const newQueries = await fetchQuestions(TOTAL_QUESTIONS, Category.Arts, Difficulty.MEDIUM)\n        setQuestions(newQueries)\n        console.log(newQueries);\n        setNumber(0)\n        setScore(0)\n        setUserAnswer([])\n        setLoading(false)\n\n    }\n    const startGeoQuiz = async () => {\n        setLoading(true)\n        setGameOver(false)\n        const newQueries = await fetchQuestions(TOTAL_QUESTIONS, Category.Geography, Difficulty.MEDIUM)\n        setQuestions(newQueries)\n        console.log(newQueries);\n        setNumber(0)\n        setScore(0)\n        setUserAnswer([])\n        setLoading(false)\n\n    }\n\n    const checkAnswer = (e: any) => {\n        if (!gameOver) {\n            const answer = e.currentTarget.value\n            const correct = questions[number].correct_answer === answer\n            if (correct) setScore((prev) => prev + 1)\n\n            const answerObject = {\n                question: questions[number].question,\n                answer,\n                correct,\n                correctAnswer: questions[number].correct_answer\n            }\n\n            setUserAnswer(prev => [...prev, answerObject])\n        }\n\n    }\n\n    const nextQuery = () => {\n        let next = number + 1\n        if (next === TOTAL_QUESTIONS) setGameOver(true);\n        else { setNumber(next) }\n    }\n\n    return (\n        <>\n            <GlobalStyle />\n            <Title>Brush up <span>your knowledge</span></Title>\n            <CardWrapper>\n                {gameOver ?\n                    (\n                        <div className='card'>\n                            <div className='imgBx'>\n                                <img src={GeneralImg} alt='' />\n                            </div>\n                            <div className='contentBx'>\n                                <div className='content'>\n                                    <h3>General Knowledge</h3>\n                                    <p>Lorem ipsum dolor sit amet consectetur adipiscing elit dis, vehicula viverra </p>\n                                    <Link to='/general'>\n                                        <button className='start' onClick={startGeneralQuiz}>Start</button>\n                                    </Link>\n                                </div>\n                            </div>\n\n                        </div>\n                    ) : null\n                }\n\n                {gameOver ?\n                    (\n                        <div className='card'>\n                            <div className='imgBx'>\n                                <img src={CSImg} alt='' />\n                            </div>\n                            <div className='contentBx'>\n                                <div className='content'>\n                                    <h3>Computer Science</h3>\n                                    <p>Lorem ipsum dolor sit amet consectetur adipiscing elit dis, vehicula viverra </p>\n                                    <Link to='/computer-science'>\n                                        <button className='start' onClick={startCSQuiz}>Start</button>\n                                    </Link>\n                                </div>\n                            </div>\n\n                        </div>\n                    ) : null\n                }\n                {gameOver ?\n                    (\n                        <div className='card'>\n                            <div className='imgBx'>\n                                <img src={GeoImg} alt='' />\n                            </div>\n                            <div className='contentBx'>\n                                <div className='content'>\n                                    <h3>Geography</h3>\n                                    <p>Lorem ipsum dolor sit amet consectetur adipiscing elit dis, vehicula viverra </p>\n                                    <Link to='/geography'>\n                                        <button className='start' onClick={startGeoQuiz}>Start</button>\n                                    </Link>\n                                </div>\n                            </div>\n\n                        </div>\n                    ) : null\n                }\n\n                {gameOver ?\n                    (\n                        <div className='card'>\n                            <div className='imgBx'>\n                                <img src={PoliticslImg} alt='' />\n                            </div>\n                            <div className='contentBx'>\n                                <div className='content'>\n                                    <h3>Politics</h3>\n                                    <p>Lorem ipsum dolor sit amet consectetur adipiscing elit dis, vehicula viverra </p>\n                                    <Link to='/politics'>\n                                        <button className='start' onClick={startPoliticsQuiz}>Start</button>\n                                    </Link>\n                                </div>\n                            </div>\n\n                        </div>\n                    ) : null\n                }\n\n                {gameOver ?\n                    (\n                        <div className='card'>\n                            <div className='imgBx'>\n                                <img src={HistoryImg} alt='' />\n                            </div>\n                            <div className='contentBx'>\n                                <div className='content'>\n                                    <h3>History</h3>\n                                    <p>Lorem ipsum dolor sit amet consectetur adipiscing elit dis, vehicula viverra </p>\n                                    <Link to='/history'>\n                                        <button className='start' onClick={startHistoryQuiz}>Start</button>\n                                    </Link>\n                                </div>\n                            </div>\n\n                        </div>\n                    ) : null\n                }\n\n                {gameOver ?\n                    (\n                        <div className='card'>\n                            <div className='imgBx'>\n                                <img src={ArtslImg} alt='' />\n                            </div>\n                            <div className='contentBx'>\n                                <div className='content'>\n                                    <h3>Liberal Arts</h3>\n                                    <p>Lorem ipsum dolor sit amet consectetur adipiscing elit dis, vehicula viverra </p>\n                                    <Link to='/arts'>\n                                        <button className='start' onClick={startArtsQuiz}>Start</button>\n                                    </Link>\n                                </div>\n                            </div>\n\n                        </div>\n                    ) : null\n                }\n\n                {!gameOver ? (<p className='score'>Score : {score}</p>) : null}\n                {loading ? <p>Loading Queries...</p> : null}\n                {!loading && !gameOver && (<QuestionCard\n                    questionNr={number + 1}\n                    totalQuestions={TOTAL_QUESTIONS}\n                    question={questions[number].question}\n                    answers={questions[number].answers}\n                    userAnswer={userAnswer ? userAnswer[number] : undefined}\n                    callback={checkAnswer}\n                />)}\n                {!gameOver && number !== TOTAL_QUESTIONS - 1 && (<button className='next' onClick={nextQuery}>Next Question</button>)}\n                {!gameOver && !loading && (<button className='next log-out'>\n                    <Link to='/'><FiLogOut className='log-icon' /></Link>\n                </button>)}\n            </CardWrapper>\n        </>\n    );\n}\n\nexport default Home;\n\n\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom'\nimport Home from './pages/Home'\n\nconst App = () => {\n  return (\n    <div>\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route exact path='/general' component={Home} />\n        <Route exact path='/computer-science' component={Home} />\n        <Route exact path='/history' component={Home} />\n        <Route exact path='/geography' component={Home} />\n        <Route exact path='/arts' component={Home} />\n        <Route exact path='/politics' component={Home} />\n      </Switch>\n\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}