{"version":3,"sources":["API.ts","components/QuestionCard/QuestionCard.styles.ts","components/QuestionCard/QuestionCard.tsx","context.tsx","components/QuizCard/QuizCard.styles.ts","utils.ts","components/QuizCard/QuizCard.tsx","images/history-img.jpg","images/geo-img.jpg","images/general-img.jpg","images/CS-img.jpg","images/politics-img.jpg","images/religion-img.jpg","components/Title/Title.styles.ts","components/Title/Title.tsx","pages/Home.tsx","App.tsx","index.tsx"],"names":["Difficulty","Category","Wrapper","styled","div","Button","correct","userClicked","QuestionCard","question","answers","userAnswer","questionNr","totalQuestions","callback","className","dangerouslySetInnerHTML","__html","map","answer","correctAnswer","disabled","value","onClick","QuizContext","React","createContext","QuizProvider","children","useState","loading","setLoading","questions","setQuestions","number","setNumber","setUserAnswer","score","setScore","gameOver","setGameOver","nextQuery","next","checkAnswer","e","currentTarget","correct_answer","prev","answerObject","Provider","undefined","TOTAL_QUESTIONS","to","GlobalStyle","createGlobalStyle","CardWrapper","fetchQuestions","amount","category","difficulty","a","endpoint","fetch","json","data","results","array","incorrect_answers","sort","Math","random","QuizCard","title","description","image","link","useContext","startQuiz","General","MEDIUM","newQueries","Computers","Geography","Arts","History","Politics","console","log","src","alt","ShinningTitle","Title","Home","GeneralImg","HistoryImg","GeoImg","CSImg","PoliticsImg","ArtsImg","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fed2a387.chunk.js","sourcesContent":["import { shuffleArray } from './utils'\n\nexport type Question = {\n    answers: [string],\n    category: string,\n    correct_answer: string,\n    difficulty: string,\n    incorrect_answers: [string],\n    question: string,\n    type: string\n}\n\nexport enum Difficulty {\n    EASY = 'easy',\n    MEDIUM = 'medium',\n    HARD = 'hard'\n}\n\nexport enum Category {\n    General = 9,\n    Computers = 18,\n    Geography = 22,\n    History = 23,\n    Politics = 24,\n    Arts = 25\n}\n\nexport const fetchQuestions = async (amount: number, category: Category, difficulty: Difficulty) => {\n    const endpoint = `https://opentdb.com/api.php?amount=${amount}&category=${category}&difficulty=${difficulty}&type=multiple`\n    const data = await (await fetch(endpoint)).json()\n    return data.results.map((question: Question) => {\n        return {\n            ...question,\n            answers: shuffleArray([question.correct_answer, ...question.incorrect_answers])\n        }\n    })\n\n\n\n}\n","import styled from 'styled-components'\n\n\nexport const Wrapper = styled.div` \nwidth: 80vw;\nmin-height: 60vh;\nmax-height:80vh;\nbackground: #333;\nborder-radius: 10px;\nborder: 1em solid #555;\npadding: 2rem;\nbox-shadow: 0px 5px 10px rgba(0, 0, 0, 0.25);\ntext-align: center;\ndisplay: grid;\nplace-items: center;\nmargin: 4rem 0;\n\n`\n\ntype ButtonWrapperProps = {\n  correct: boolean;\n  userClicked: boolean;\n};\n\nexport const Button = styled.div<ButtonWrapperProps>`\n  background: transparent;\n  :hover {\n    opacity: 0.8;\n  }\n  button {\n    cursor: pointer;\n    font-size: 1rem;\n    font-weight: 700;\n    width: 40vw;\n    max-height: 5rem;\n    min-height:1rem;\n    margin: 5px 0;\n    background: ${({ correct, userClicked }) =>\n    correct\n      ? 'linear-gradient(90deg, #5aff15, #00b712)'\n      : !correct && userClicked\n        ? 'linear-gradient(90deg, #a71d31, #3f0d12)'\n        : 'linear-gradient(90deg, #fc575e, #f7b42c)'};\n    border: 3px solid #ffffff;\n    box-shadow: 1px 2px 0px rgba(0, 0, 0, 0.1);\n    border-radius: 10px;\n    color: #fff;\n    text-shadow: 0px 1px 0px rgba(0, 0, 0, 0.25);\n  }\n  @media (max-width: 425px) {\n    font-size: .5rem;\n\n    button{\n      font-size: .7rem;\n    }\n  \n  }\n  `","import React from 'react'\nimport { Button, Wrapper } from './QuestionCard.styles'\nimport { AnswerObject } from '../../context'\n\n\ntype Props = {\n    question: string,\n    answers: [string],\n    userAnswer: AnswerObject | undefined,\n    callback: (e: React.MouseEvent<HTMLButtonElement>) => void,\n    questionNr: number,\n    totalQuestions: number\n}\n\nconst QuestionCard: React.FC<Props> = ({ question, answers, userAnswer, questionNr, totalQuestions, callback }) => {\n    return (\n        <Wrapper>\n            <p className='question'>Question: {questionNr} / {totalQuestions}</p>\n            <p dangerouslySetInnerHTML={{ __html: question }} />\n            <div>\n                {answers && answers.map(answer => (\n                    <Button\n                        key={answer}\n                        correct={userAnswer?.correctAnswer === answer}\n                        userClicked={userAnswer?.answer === answer}\n                    >\n                        <button disabled={userAnswer ? true : false} value={answer} onClick={callback}>\n                            <p dangerouslySetInnerHTML={{ __html: answer }} />\n                        </button>\n                    </Button>\n                ))\n                }\n            </div>\n\n        </Wrapper>\n    )\n}\n\nexport default QuestionCard\n","import React, { useState } from 'react'\nimport { Question } from './API'\nimport QuestionCard from './components/QuestionCard/QuestionCard'\nimport { Link } from 'react-router-dom'\nimport { FiLogOut } from 'react-icons/fi'\nconst TOTAL_QUESTIONS = 10\n\n\nexport const QuizContext: any = React.createContext({});\n\nexport type AnswerObject = {\n    question: string,\n    answer: string,\n    correct: boolean,\n    correctAnswer: string\n\n}\nexport const QuizProvider: React.FC<{}> = ({ children }) => {\n    const [loading, setLoading] = useState(false)\n    const [questions, setQuestions] = useState<Question[]>([])\n    const [number, setNumber] = useState(0)\n    const [userAnswer, setUserAnswer] = useState<AnswerObject[]>([])\n    const [score, setScore] = useState(0)\n    const [gameOver, setGameOver] = useState(true)\n\n    const nextQuery = () => {\n        let next = number + 1\n        if (next === TOTAL_QUESTIONS) setGameOver(true);\n        else { setNumber(next) }\n    }\n\n    const checkAnswer = (e: any) => {\n        if (!gameOver) {\n            const answer = e.currentTarget.value\n            const correct = questions[number].correct_answer === answer\n            if (correct) setScore((prev: number) => prev + 1)\n\n            const answerObject = {\n                question: questions[number].question,\n                answer,\n                correct,\n                correctAnswer: questions[number].correct_answer\n            }\n            setUserAnswer(prev => [...prev, answerObject])\n\n        }\n    }\n\n\n    return (\n        <QuizContext.Provider value={{ questions, setQuestions, loading, setLoading, number, setNumber, userAnswer, setUserAnswer, score, setScore, gameOver, setGameOver, nextQuery, checkAnswer }}>\n            {children}\n            {!gameOver ? (<p className='score'>Score : {score}</p>) : null}\n            {loading ? <p>Loading Queries...</p> : null}\n            {!loading && !gameOver && (<QuestionCard\n                questionNr={number + 1}\n                totalQuestions={TOTAL_QUESTIONS}\n                question={questions[number].question}\n                answers={questions[number].answers}\n                userAnswer={userAnswer ? userAnswer[number] : undefined}\n                callback={checkAnswer}\n            />)}\n            {!gameOver && number !== TOTAL_QUESTIONS - 1 && userAnswer[number] && (<button className='next' onClick={nextQuery}>Next Question</button>)}\n            {!gameOver && number === TOTAL_QUESTIONS - 1 && (<Link className='next log-out' to='/'><FiLogOut />\n            </Link>)}\n        </QuizContext.Provider>\n    )\n}\n","import styled, { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\nhtml {\n    height: 100%;\n  }\n  body {\n    margin: 0;\n    padding: 0 2rem;\n    display: flex;\n    justify-content: center;\n    flex-direction: row;\n    flex-wrap: wrap;\n    background: #222;\n    color: #fff;\n    font-size: 1rem;\n  }\n  * {\n    font-family: 'Kiwi Maru', serif;\n    box-sizing: border-box;\n  }\n\n  .score{\n    position: absolute;\n    top: 16%;\n    right: 15%;\n    font-size: 2rem;\n    color: #9eb5ff;\n  }\n\n  .next{\n    position: absolute;\n    bottom: 5%;\n    right: 50%;\n    padding: .5rem 2rem;\n    border-radius: 1rem;\n  }\n\n  .log-out{\n    right: 10%;\n    background: #777;\n  }\n\n  .log-icon{\n    font-size: 1rem;\n\n  }\n  @media (max-width: 770px) {\n    .next{\n      right: 40%;\n\n    }\n    .log-out{\n      right: 5%;\n      bottom: 5%;\n    }\n    .score{\n      font-size: 1.5rem;\n      top: 20%;\n    }\n  }\n\n  @media (max-width: 425px) {\n    .next{\n      bottom: 5%;\n      right: 30%;\n\n    }\n    .log-out{\n      right: 5%;\n      bottom: 5%;\n    }\n    .score{\n      font-size: 1.5rem;\n      top: 15%;\n    }\n  }\n  \n  @media (max-width: 375px) {\n    .next{\n      bottom: -10%;\n      right: 30%;\n\n    }\n\n`\nexport const CardWrapper = styled.div`\nposition: relative;\ndisplay: flex;\nmax-width: 80vw;\nflex-direction: row;\n\n.card{\n    position: relative;\n    max-width: 600px;\n    max-height: 800px;\n    margin: 15px;\n    color: #333;\n    overflow: hidden;\n    border-radius: 1rem;\n\n}\n\n.imgBx, . contentBx {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n}\n\nimg{\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    object-fit: cover;\n}\n\n.contentBx::before{\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: #fff;\n  transform: scaleX(0);\n  transition: transform 0.2s ease-in-out;\n  transform-origin: right;\n}\n\n  .card:hover .contentBx::before{\n    transform: scaleX(1);\n    transition: transform 0.2s ease-in-out;\n    transform-origin: left;\n  }\n\n  .card .contentBx{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .card .contentBx .content{\n    position: relative;\n    padding: 3rem;\n    z-index: 1;\n    transition: .2s;\n    transform: translateX(-600px);\n  }\n\n  .card .contentBx .content h3{\n    font-weight: bolder;\n  }\n\n  .card:hover .contentBx .content{\n    transition: .2s;\n    transform: translateX(0);\n  }\n\n  .card .contentBx .content .start{\n    margin: .5rem 0;\n    padding: .5rem 2rem;\n    font-weight: 700;\n    font-size: 1rem;\n    color: #fff;\n    background: #32CD32;\n    border-radius: 1rem;\n    cursor: pointer;\n  }\n\n  .card .contentBx .content .start:hover{\n    background: orange;\n  }\n\n  `\n","export const shuffleArray = (array: any[]) => (\n    [...array].sort(() => Math.random() - 0.5)\n)","import React, { useContext } from 'react'\nimport { QuizContext } from '../../context'\nimport { Link } from 'react-router-dom'\nimport { GlobalStyle, CardWrapper } from './QuizCard.styles'\nimport { fetchQuestions, Category, Difficulty } from '../../API'\nconst TOTAL_QUESTIONS = 10\n\ntype Props = {\n    title?: string,\n    description: string,\n    image?: string,\n    category: string,\n    link: string\n}\n\nconst QuizCard: React.FC<Props> = ({ title, description, image, category, link }) => {\n    const { setQuestions, setLoading, gameOver, setGameOver, setNumber, setUserAnswer, setScore } = useContext(QuizContext)\n\n    const startQuiz = async (e: any) => {\n        setLoading(true)\n        setGameOver(false)\n        let newQueries\n        switch (e) {\n            case 'General':\n                newQueries = await fetchQuestions(TOTAL_QUESTIONS, Category.General, Difficulty.MEDIUM)\n                break\n            case 'CS':\n                newQueries = await fetchQuestions(TOTAL_QUESTIONS, Category.Computers, Difficulty.MEDIUM)\n                break\n            case 'Geography':\n                newQueries = await fetchQuestions(TOTAL_QUESTIONS, Category.Geography, Difficulty.MEDIUM)\n                break\n            case 'Arts':\n                newQueries = await fetchQuestions(TOTAL_QUESTIONS, Category.Arts, Difficulty.MEDIUM)\n                break\n            case 'History':\n                newQueries = await fetchQuestions(TOTAL_QUESTIONS, Category.History, Difficulty.MEDIUM)\n                break\n            case 'Politics':\n                newQueries = await fetchQuestions(TOTAL_QUESTIONS, Category.Politics, Difficulty.MEDIUM)\n                break\n\n        }\n        setQuestions(newQueries)\n        console.log(newQueries);\n        setNumber(0)\n        setScore(0)\n        setUserAnswer([])\n        setLoading(false)\n    }\n\n    return (\n        <>\n            <GlobalStyle />\n            <CardWrapper>\n                {gameOver ? (<div className='card'>\n                    <div className='imgBx'>\n                        <img src={image} alt='' />\n                    </div>\n                    <div className='contentBx'>\n                        <div className='content'>\n                            <h3>{title}</h3>\n                            <p>{description}</p>\n                            <Link to={link}>\n                                <button className='start' onClick={() => startQuiz(category)}>Start</button>\n                            </Link>\n                        </div>\n                    </div>\n                </div>) : null}\n            </CardWrapper>\n        </>\n    )\n}\n\nexport default QuizCard\n","export default __webpack_public_path__ + \"static/media/history-img.2a5fc10a.jpg\";","export default __webpack_public_path__ + \"static/media/geo-img.603776a8.jpg\";","export default __webpack_public_path__ + \"static/media/general-img.6f1d8480.jpg\";","export default __webpack_public_path__ + \"static/media/CS-img.a53de674.jpg\";","export default __webpack_public_path__ + \"static/media/politics-img.246a790e.jpg\";","export default __webpack_public_path__ + \"static/media/religion-img.e1705431.jpg\";","import styled from 'styled-components'\n\nexport const ShinningTitle = styled.div`\n.title{\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    margin: 2rem 0;\n}\n\n.title-span{\n    font-size: 1.5rem;\n    padding: 0 4rem;\n}\n\n.sign {\n    font-size: 6rem;\n    color: #ffe6ff;\n    text-shadow: 0 0 0.6rem #ffe6ff, 0 0 1.5rem #ff65bd,\n      -0.2rem 0.1rem 1rem #ff65bd, 0.2rem 0.1rem 1rem #ff65bd,\n      0 -0.5rem 2rem #ff2483, 0 0.5rem 3rem #ff2483;\n    animation: shine 2s forwards, flicker 3s infinite;\n  }\n\n  @media (max-width: 425px) {\n    .sign{\n      font-size: 3rem;\n    }\n    .title-span{\n      font-size: 1rem;\n\n    }\n    .title{\n      margin: 1rem 0;\n\n    }\n  }\n  @keyframes blink {\n    0%,\n    22%,\n    36%,\n    75% {\n      color: #ffe6ff;\n      text-shadow: 0 0 0.6rem #ffe6ff, 0 0 1.5rem #ff65bd,\n        -0.2rem 0.1rem 1rem #ff65bd, 0.2rem 0.1rem 1rem #ff65bd,\n        0 -0.5rem 2rem #ff2483, 0 0.5rem 3rem #ff2483;\n    }\n    28%,\n    33% {\n      color: #ff65bd;\n      text-shadow: none;\n    }\n    82%,\n    97% {\n      color: #ff2483;\n      text-shadow: none;\n    }\n  }\n  \n \n  .flicker {\n    animation: shine 2s forwards, blink 3s 2s infinite;\n  }\n  \n  .fast-flicker {\n    animation: shine 2s forwards, blink 10s 1s infinite;\n \n  }\n  \n  @keyframes shine {\n    0% {\n      color: #6b1839;\n      text-shadow: none;\n    }\n    100% {\n      color: #ffe6ff;\n      text-shadow: 0 0 0.6rem #ffe6ff, 0 0 1.5rem #ff65bd,\n        -0.2rem 0.1rem 1rem #ff65bd, 0.2rem 0.1rem 1rem #ff65bd,\n        0 -0.5rem 2rem #ff2483, 0 0.5rem 3rem #ff2483;\n    }\n  }\n  \n  @keyframes flicker {\n    from {\n      opacity: 1;\n    }\n  \n    4% {\n      opacity: 0.9;\n    }\n  \n    6% {\n      opacity: 0.85;\n    }\n  \n    8% {\n      opacity: 0.95;\n    }\n  \n    10% {\n      opacity: 0.9;\n    }\n  \n    11% {\n      opacity: 0.922;\n    }\n  \n    12% {\n      opacity: 0.9;\n    }\n  \n    14% {\n      opacity: 0.95;\n    }\n  \n    16% {\n      opacity: 0.98;\n    }\n  \n    17% {\n      opacity: 0.9;\n    }\n  \n    19% {\n      opacity: 0.93;\n    }\n  \n    20% {\n      opacity: 0.99;\n    }\n  \n    24% {\n      opacity: 1;\n    }\n  \n    26% {\n      opacity: 0.94;\n    }\n  \n    28% {\n      opacity: 0.98;\n    }\n  \n    37% {\n      opacity: 0.93;\n    }\n  \n    38% {\n      opacity: 0.5;\n    }\n  \n    39% {\n      opacity: 0.96;\n    }\n  \n    42% {\n      opacity: 1;\n    }\n  \n    44% {\n      opacity: 0.97;\n    }\n  \n    46% {\n      opacity: 0.94;\n    }\n  \n    56% {\n      opacity: 0.9;\n    }\n  \n    58% {\n      opacity: 0.9;\n    }\n  \n    60% {\n      opacity: 0.99;\n    }\n  \n    68% {\n      opacity: 1;\n    }\n  \n    70% {\n      opacity: 0.9;\n    }\n  \n    72% {\n      opacity: 0.95;\n    }\n  \n    93% {\n      opacity: 0.93;\n    }\n  \n    95% {\n      opacity: 0.95;\n    }\n  \n    97% {\n      opacity: 0.93;\n    }\n  \n    to {\n      opacity: 1;\n    }\n  }\n`","import React from 'react'\nimport { ShinningTitle } from './Title.styles'\nconst Title = () => {\n    return (\n        <ShinningTitle>\n            <div className='title'>\n                <div className=\"sign\">\n                    <span className=\"fast-flicker\">Bru</span>\n                    sh  <span className=\"flicker\">  U</span>p\n                </div>\n                <div>\n                    <span className='title-span'>your IQ</span>\n                </div>\n            </div>\n        </ShinningTitle>\n    )\n}\n\nexport default Title\n","import React from 'react'\nimport QuizCard from '../components/QuizCard/QuizCard'\nimport HistoryImg from '../images/history-img.jpg'\nimport GeoImg from '../images/geo-img.jpg'\nimport GeneralImg from '../images/general-img.jpg'\nimport CSImg from '../images/CS-img.jpg'\nimport PoliticsImg from '../images/politics-img.jpg'\nimport ArtsImg from '../images/religion-img.jpg'\nimport Title from '../components/Title/Title'\n\n\nconst Home: React.FC = () => {\n    return (\n        <>\n            <Title />\n            <QuizCard title='General Knowledge' description='Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore.' image={GeneralImg} category='General' link='/general' />\n            <QuizCard title='History' description='Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore.' image={HistoryImg} category='History' link='/history' />\n            <QuizCard title='Geography' description='Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore.' image={GeoImg} category='Geography' link='/geography' />\n            <QuizCard title='Computer Science' description='Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore.' image={CSImg} category='CS' link='/computer-science' />\n            <QuizCard title='Politics' description='Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore.' image={PoliticsImg} category='Politics' link='/politics' />\n            <QuizCard title='Arts' description='Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore.' image={ArtsImg} category='Arts' link='/arts' />\n\n        </>\n    )\n\n}\n\nexport default Home\n\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom'\nimport Home from './pages/Home'\nimport { QuizProvider } from './context'\n\nconst App = () => {\n  return (\n    <>\n      <QuizProvider>\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/general' component={Home} />\n          <Route exact path='/computer-science' component={Home} />\n          <Route exact path='/history' component={Home} />\n          <Route exact path='/geography' component={Home} />\n          <Route exact path='/arts' component={Home} />\n          <Route exact path='/politics' component={Home} />\n        </Switch>\n      </QuizProvider>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}