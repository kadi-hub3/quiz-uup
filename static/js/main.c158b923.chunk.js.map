{"version":3,"sources":["API.ts","pages/Home.styles.ts","components/QuestionCard.styles.ts","components/QuestionCard.tsx","context.tsx","components/QuizCard.styles.ts","utils.ts","components/QuizCard.tsx","images/history-img.jpg","pages/HistoryPage.tsx","images/religion-img.jpg","pages/ArtsPage.tsx","images/politics-img.jpg","pages/PoliticsPage.tsx","images/CS-img.jpg","pages/CSPage.tsx","images/geo-img.jpg","pages/GeoPage.tsx","images/general-img.jpg","pages/GeneralPage.tsx","pages/Home.tsx","App.tsx","index.tsx"],"names":["Difficulty","Category","Title","styled","h3","Wrapper","div","Button","correct","userClicked","QuestionCard","question","answers","userAnswer","questionNr","totalQuestions","callback","className","dangerouslySetInnerHTML","__html","map","answer","correctAnswer","disabled","value","onClick","QuizContext","React","createContext","QuizProvider","children","useState","loading","setLoading","questions","setQuestions","number","setNumber","setUserAnswer","score","setScore","gameOver","setGameOver","nextQuery","next","checkAnswer","e","currentTarget","correct_answer","prev","answerObject","Provider","undefined","TOTAL_QUESTIONS","to","GlobalStyle","createGlobalStyle","CardWrapper","fetchQuestions","amount","category","difficulty","a","endpoint","fetch","json","data","results","array","incorrect_answers","sort","Math","random","QuizCard","title","description","image","link","useContext","startQuiz","General","MEDIUM","newQueries","Computers","Geography","Arts","History","Politics","console","log","src","alt","HistoryPage","HistoryImg","ArtsPage","ArtsImg","PoliticsPage","PoliticsImg","CSPage","CSImg","GeoPage","GeoImg","GeneralPage","GeneralImg","Home","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c158b923.chunk.js","sourcesContent":["import { shuffleArray } from './utils'\n\nexport type Question = {\n    answers: [string],\n    category: string,\n    correct_answer: string,\n    difficulty: string,\n    incorrect_answers: [string],\n    question: string,\n    type: string\n}\n\nexport enum Difficulty {\n    EASY = 'easy',\n    MEDIUM = 'medium',\n    HARD = 'hard'\n}\n\nexport enum Category {\n    General = 9,\n    Computers = 18,\n    Geography = 22,\n    History = 23,\n    Politics = 24,\n    Arts = 25\n}\n\nexport const fetchQuestions = async (amount: number, category: Category, difficulty: Difficulty) => {\n    const endpoint = `https://opentdb.com/api.php?amount=${amount}&category=${category}&difficulty=${difficulty}&type=multiple`\n    const data = await (await fetch(endpoint)).json()\n    return data.results.map((question: Question) => {\n        return {\n            ...question,\n            answers: shuffleArray([question.correct_answer, ...question.incorrect_answers])\n        }\n    })\n\n\n\n}\n","import styled from 'styled-components'\n\nexport const Title = styled.h3`\n    font-size: 3em;\n    text-align: center;\n    color: #fff;\n    text-transform: capitalize;\n    display: flex;\n    flex-direction: column;\n\n    span{\n      font-size: 1.5rem;\n      padding-left: 2em;\n      color: #db7093;\n    }\n\n`\n\n","import styled from 'styled-components'\n\n\nexport const Wrapper = styled.div` \nwidth: 80vw;\nheight: 60vh;\nbackground: #333;\nborder-radius: 10px;\nborder: 1em solid #555;\npadding: 2rem;\nbox-shadow: 0px 5px 10px rgba(0, 0, 0, 0.25);\ntext-align: center;\ndisplay: grid;\nplace-items: center;\nmargin: 4rem 0;`\n\ntype ButtonWrapperProps = {\n  correct: boolean;\n  userClicked: boolean;\n};\n\nexport const Button = styled.div<ButtonWrapperProps>`\n  background: transparent;\n  margin: 1rem 0;\n  :hover {\n    opacity: 0.8;\n  }\n  button {\n    cursor: pointer;\n    font-size: 1rem;\n    font-weight: 700;\n    width: 40vw;\n    height: 4rem;\n    margin: 5px 0;\n    background: ${({ correct, userClicked }) =>\n    correct\n      ? 'linear-gradient(90deg, #5aff15, #00b712)'\n      : !correct && userClicked\n        ? 'linear-gradient(90deg, #a71d31, #3f0d12)'\n        : 'linear-gradient(90deg, #fc575e, #f7b42c)'};\n    border: 3px solid #ffffff;\n    box-shadow: 1px 2px 0px rgba(0, 0, 0, 0.1);\n    border-radius: 10px;\n    color: #fff;\n    text-shadow: 0px 1px 0px rgba(0, 0, 0, 0.25);\n  }\n  `","import React from 'react'\nimport { Button, Wrapper } from './QuestionCard.styles'\nimport { AnswerObject } from '../context'\n\n\ntype Props = {\n    question: string,\n    answers: [string],\n    userAnswer: AnswerObject | undefined,\n    callback: (e: React.MouseEvent<HTMLButtonElement>) => void,\n    questionNr: number,\n    totalQuestions: number\n}\n\nconst QuestionCard: React.FC<Props> = ({ question, answers, userAnswer, questionNr, totalQuestions, callback }) => {\n    return (\n        <Wrapper>\n            <p className='question'>Question: {questionNr} / {totalQuestions}</p>\n            <p dangerouslySetInnerHTML={{ __html: question }} />\n            <div>\n                {answers && answers.map(answer => (\n                    <Button\n                        key={answer}\n                        correct={userAnswer?.correctAnswer === answer}\n                        userClicked={userAnswer?.answer === answer}\n                    >\n                        <button disabled={userAnswer ? true : false} value={answer} onClick={callback}>\n                            <p dangerouslySetInnerHTML={{ __html: answer }} />\n                        </button>\n                    </Button>\n                ))\n                }\n            </div>\n\n        </Wrapper>\n    )\n}\n\nexport default QuestionCard\n","import React, { useState } from 'react'\nimport { Question } from './API'\nimport QuestionCard from './components/QuestionCard'\nimport { Link } from 'react-router-dom'\nimport { FiLogOut } from 'react-icons/fi'\nconst TOTAL_QUESTIONS = 10\n\n\nexport const QuizContext: any = React.createContext({});\n\nexport type AnswerObject = {\n    question: string,\n    answer: string,\n    correct: boolean,\n    correctAnswer: string\n\n}\nexport const QuizProvider: React.FC<{}> = ({ children }) => {\n    const [loading, setLoading] = useState(false)\n    const [questions, setQuestions] = useState<Question[]>([])\n    const [number, setNumber] = useState(0)\n    const [userAnswer, setUserAnswer] = useState<AnswerObject[]>([])\n    const [score, setScore] = useState(0)\n    const [gameOver, setGameOver] = useState(true)\n\n\n\n    const nextQuery = () => {\n        let next = number + 1\n        if (next === TOTAL_QUESTIONS) setGameOver(true);\n        else { setNumber(next) }\n    }\n\n\n    const checkAnswer = (e: any) => {\n        if (!gameOver) {\n            const answer = e.currentTarget.value\n            const correct = questions[number].correct_answer === answer\n            if (correct) setScore((prev: number) => prev + 1)\n\n            const answerObject = {\n                question: questions[number].question,\n                answer,\n                correct,\n                correctAnswer: questions[number].correct_answer\n            }\n            setUserAnswer(prev => [...prev, answerObject])\n\n        }\n    }\n\n    return (\n        <QuizContext.Provider value={{ questions, setQuestions, loading, setLoading, number, setNumber, userAnswer, setUserAnswer, score, setScore, gameOver, setGameOver, nextQuery, checkAnswer }}>\n            {children}\n            {!gameOver ? (<p className='score'>Score : {score}</p>) : null}\n            {loading ? <p>Loading Queries...</p> : null}\n            {!loading && !gameOver && (<QuestionCard\n                questionNr={number + 1}\n                totalQuestions={TOTAL_QUESTIONS}\n                question={questions[number].question}\n                answers={questions[number].answers}\n                userAnswer={userAnswer ? userAnswer[number] : undefined}\n                callback={checkAnswer}\n            />)}\n            {!gameOver && number !== TOTAL_QUESTIONS - 1 && (<button className='next' onClick={nextQuery}>Next Question</button>)}\n            {!gameOver && !loading && (<Link to='/'><button className='next log-out'><FiLogOut />\n            </button></Link>)}\n        </QuizContext.Provider>\n    )\n}\n","import styled, { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\nhtml {\n    height: 100%;\n  }\n  body {\n    margin: 0;\n    padding: 0 2rem;\n    display: grid;\n   place-items: center;\n    background: #222;\n    color: #fff;\n    font-size: 1rem;\n  }\n  * {\n    font-family: 'Kiwi Maru', serif;\n    box-sizing: border-box;\n  }\n\n  .score{\n    position: absolute;\n    top: 6%;\n    right: 15%;\n    font-size: 2rem;\n    color: #9eb5ff;\n  }\n\n  .next{\n    position: absolute;\n    bottom: 25%;\n    right: 40%;\n    padding: .5rem 2rem;\n    border-radius: 1rem;\n  }\n\n  .log-out{\n    right: 10%;\n    background: #777;\n  }\n\n  .log-icon{\n    font-size: 1rem;\n\n  }\n\n  \n\n`\nexport const CardWrapper = styled.div`\nposition: relative;\ndisplay: flex;\njustify-content: center;\nflex-direction: column;\nflex-wrap: wrap;\nmax-width: 80vw;\n\n.card{\n    position: relative;\n    width: 400px;\n    height: 400px;\n    margin: 15px;\n    color: #333;\n    overflow: hidden;\n    border-radius: 1rem;\n\n}\n\n.imgBx, . contentBx {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n}\n\nimg{\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    object-fit: cover;\n}\n\n.contentBx::before{\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: #fff;\n  transform: scalex(0);\n  transition: transform 0.2s ease-in-out;\n  transform-origin: right;\n}\n\n  .card:hover .contentBx::before{\n    transform: scaleX(1);\n    transition: transform 0.2s ease-in-out;\n    transform-origin: left;\n  }\n\n  .card .contentBx{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .card .contentBx .content{\n    position: relative;\n    padding: 3rem;\n    z-index: 1;\n    transition: .2s;\n    transform: translateX(-300px);\n  }\n\n  .card .contentBx .content h3{\n    font-weight: bolder;\n  }\n\n  .card:hover .contentBx .content{\n    transition: .2s;\n    transform: translateX(0);\n  }\n\n  .card .contentBx .content .start{\n    margin: .5rem 0;\n    padding: .5rem 2rem;\n    font-weight: 700;\n    font-size: 1rem;\n    color: #fff;\n    background: #32CD32;\n    border-radius: 1rem;\n    cursor: pointer;\n  }\n\n  .card .contentBx .content .start:hover{\n    background: orange;\n  }\n`;\n","export const shuffleArray = (array: any[]) => (\n    [...array].sort(() => Math.random() - 0.5)\n)","import React, { useContext } from 'react'\nimport { QuizContext } from '../context'\nimport { Link } from 'react-router-dom'\nimport { GlobalStyle, CardWrapper } from './QuizCard.styles'\nimport { fetchQuestions, Category, Difficulty } from '../API'\nconst TOTAL_QUESTIONS = 10\n\ntype Props = {\n    title?: string,\n    description: string,\n    image?: string,\n    category: string,\n    link: string\n}\n\nconst QuizCard: React.FC<Props> = ({ title, description, image, category, link }) => {\n    const { setQuestions, setLoading, gameOver, setGameOver, setNumber, setUserAnswer, setScore } = useContext(QuizContext)\n\n    const startQuiz = async (e: any) => {\n        setLoading(true)\n        setGameOver(false)\n        let newQueries\n        switch (e) {\n            case 'General':\n                newQueries = await fetchQuestions(TOTAL_QUESTIONS, Category.General, Difficulty.MEDIUM)\n                break\n            case 'CS':\n                newQueries = await fetchQuestions(TOTAL_QUESTIONS, Category.Computers, Difficulty.MEDIUM)\n                break\n            case 'Geography':\n                newQueries = await fetchQuestions(TOTAL_QUESTIONS, Category.Geography, Difficulty.MEDIUM)\n                break\n            case 'Arts':\n                newQueries = await fetchQuestions(TOTAL_QUESTIONS, Category.Arts, Difficulty.MEDIUM)\n                break\n            case 'History':\n                newQueries = await fetchQuestions(TOTAL_QUESTIONS, Category.History, Difficulty.MEDIUM)\n                break\n            case 'Politics':\n                newQueries = await fetchQuestions(TOTAL_QUESTIONS, Category.Politics, Difficulty.MEDIUM)\n                break\n\n        }\n        setQuestions(newQueries)\n        console.log(newQueries);\n        setNumber(0)\n        setScore(0)\n        setUserAnswer([])\n        setLoading(false)\n    }\n\n    return (\n        <>\n            <GlobalStyle />\n            <CardWrapper>\n                {gameOver ? (<div className='card'>\n                    <div className='imgBx'>\n                        <img src={image} alt='' />\n                    </div>\n                    <div className='contentBx'>\n                        <div className='content'>\n                            <h3>{title}</h3>\n                            <p>{description}</p>\n                            <Link to={link}>\n                                <button className='start' onClick={() => startQuiz(category)}>Start</button>\n                            </Link>\n                        </div>\n                    </div>\n                </div>) : null}\n            </CardWrapper>\n        </>\n    )\n}\n\nexport default QuizCard\n","export default __webpack_public_path__ + \"static/media/history-img.2a5fc10a.jpg\";","import React from 'react'\nimport QuizCard from '../components/QuizCard'\nimport HistoryImg from '../images/history-img.jpg'\n\nconst HistoryPage = () => {\n    return (\n        <QuizCard title='History' description='Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore.' image={HistoryImg} category='History' link='/history' />\n\n    )\n}\n\nexport default HistoryPage\n","export default __webpack_public_path__ + \"static/media/religion-img.e1705431.jpg\";","import React from 'react'\nimport QuizCard from '../components/QuizCard'\nimport ArtsImg from '../images/religion-img.jpg'\n\nconst ArtsPage = () => {\n    return (\n        <QuizCard title='Arts' description='Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore.' image={ArtsImg} category='Arts' link='/arts' />\n    )\n}\n\nexport default ArtsPage\n","export default __webpack_public_path__ + \"static/media/politics-img.246a790e.jpg\";","import React from 'react'\nimport QuizCard from '../components/QuizCard'\nimport PoliticsImg from '../images/politics-img.jpg'\n\nconst PoliticsPage = () => {\n    return (\n        <QuizCard title='Politics' description='Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore.' image={PoliticsImg} category='Politics' link='/politics' />\n    )\n}\n\nexport default PoliticsPage\n","export default __webpack_public_path__ + \"static/media/CS-img.a53de674.jpg\";","import React from 'react'\nimport QuizCard from '../components/QuizCard'\nimport CSImg from '../images/CS-img.jpg'\n\nconst CSPage = () => {\n    return (\n        <QuizCard title='Computer Science' description='Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore.' image={CSImg} category='CS' link='/computer-science' />\n    )\n}\n\nexport default CSPage\n","export default __webpack_public_path__ + \"static/media/geo-img.603776a8.jpg\";","import React from 'react'\nimport QuizCard from '../components/QuizCard'\nimport GeoImg from '../images/geo-img.jpg'\n\nconst GeoPage = () => {\n    return (\n        <QuizCard title='Geography' description='Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore.' image={GeoImg} category='Geography' link='/geography' />\n    )\n}\n\nexport default GeoPage\n","export default __webpack_public_path__ + \"static/media/general-img.6f1d8480.jpg\";","import React from 'react'\nimport QuizCard from '../components/QuizCard'\nimport GeneralImg from '../images/general-img.jpg'\n\nconst GeneralPage = () => {\n    return (\n        <QuizCard title='General Knowledge' description='Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore.' image={GeneralImg} category='General' link='/general' />\n    )\n}\n\nexport default GeneralPage\n","import React from 'react'\nimport { Title } from './Home.styles'\nimport HistoryPage from './HistoryPage'\nimport ArtsPage from './ArtsPage'\nimport PoliticsPage from './PoliticsPage'\nimport CSPage from './CSPage'\nimport GeoPage from './GeoPage'\nimport GeneralPage from './GeneralPage'\n\n\nconst Home: React.FC = () => {\n    return (\n        <>\n            <Title>Brush up <span> ur knowledge</span></Title>\n            <div>\n                <GeneralPage />\n                <CSPage />\n                <GeoPage />\n                <PoliticsPage />\n                <HistoryPage />\n                <ArtsPage />\n            </div>\n        </>\n    )\n\n}\n\nexport default Home\n\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom'\nimport Home from './pages/Home'\nimport HistoryPage from './pages/HistoryPage'\nimport ArtsPage from './pages/ArtsPage'\nimport PoliticsPage from './pages/PoliticsPage'\nimport CSPage from './pages/CSPage'\nimport GeoPage from './pages/GeoPage'\nimport GeneralPage from './pages/GeneralPage'\nimport { QuizProvider } from './context'\n\nconst App = () => {\n  return (\n    <>\n      <QuizProvider>\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/general' component={GeneralPage} />\n          <Route exact path='/computer-science' component={CSPage} />\n          <Route exact path='/history' component={HistoryPage} />\n          <Route exact path='/geography' component={GeoPage} />\n          <Route exact path='/arts' component={ArtsPage} />\n          <Route exact path='/politics' component={PoliticsPage} />\n        </Switch>\n      </QuizProvider>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}